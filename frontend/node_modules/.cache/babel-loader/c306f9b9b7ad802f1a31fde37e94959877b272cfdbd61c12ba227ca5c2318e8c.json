{"ast":null,"code":"var _jsxFileName = \"/Users/joseph/Desktop/project ideas/ChristIsLord/frontend/src/components/MoodTracker.js\",\n  _s = $RefreshSig$();\n// src/components/MoodTracker.js\nimport React, { useState } from 'react';\nimport { Container, Typography, Button, Box, TextField } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoodTracker = ({\n  handleAIResponse\n}) => {\n  _s();\n  const [selectedMood, setSelectedMood] = useState(null);\n  const [feelingExplanation, setFeelingExplanation] = useState('');\n  const [showExplanation, setShowExplanation] = useState(false);\n\n  // Mood options with emojis and labels\n  const moods = [{\n    label: 'happy',\n    emoji: 'ðŸ˜Š'\n  }, {\n    label: 'anxious',\n    emoji: 'ðŸ˜°'\n  }, {\n    label: 'sad',\n    emoji: 'ðŸ˜¢'\n  }, {\n    label: 'overwhelmed',\n    emoji: 'ðŸ˜µ'\n  }, {\n    label: 'calm',\n    emoji: 'ðŸ˜Œ'\n  }];\n\n  // Handle mood selection\n  const handleMoodSelect = mood => {\n    setSelectedMood(mood);\n    setShowExplanation(true); // Show explanation prompt after selecting a mood\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      backgroundColor: '#F9F9F9',\n      padding: '20px',\n      borderRadius: '12px',\n      boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.1)',\n      marginBottom: '30px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      style: {\n        marginBottom: '10px',\n        fontWeight: 'bold'\n      },\n      children: \"How are you feeling today?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      gap: \"15px\",\n      children: moods.map((mood, index) => /*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleMoodSelect(mood),\n          style: {\n            backgroundColor: (selectedMood === null || selectedMood === void 0 ? void 0 : selectedMood.label) === mood.label ? '#FF5722' : '#E0E0E0',\n            color: '#000',\n            width: '70px',\n            height: '70px',\n            borderRadius: '50%',\n            fontSize: '2rem',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: mood.emoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          style: {\n            marginTop: '5px',\n            color: '#555'\n          },\n          children: mood.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), selectedMood && /*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        component: Link,\n        to: `/guidance/${selectedMood.label}`,\n        style: {\n          padding: '10px 20px',\n          backgroundColor: '#FF5722',\n          color: '#fff'\n        },\n        children: \"Need Guidance?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(MoodTracker, \"x4beIVs5yG8aPmGq1PyakXb0uzA=\");\n_c = MoodTracker;\nexport default MoodTracker;\nvar _c;\n$RefreshReg$(_c, \"MoodTracker\");","map":{"version":3,"names":["React","useState","Container","Typography","Button","Box","TextField","Link","jsxDEV","_jsxDEV","MoodTracker","handleAIResponse","_s","selectedMood","setSelectedMood","feelingExplanation","setFeelingExplanation","showExplanation","setShowExplanation","moods","label","emoji","handleMoodSelect","mood","style","backgroundColor","padding","borderRadius","boxShadow","marginBottom","textAlign","children","variant","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","gap","map","index","onClick","color","width","height","fontSize","alignItems","marginTop","mt","component","to","_c","$RefreshReg$"],"sources":["/Users/joseph/Desktop/project ideas/ChristIsLord/frontend/src/components/MoodTracker.js"],"sourcesContent":["// src/components/MoodTracker.js\nimport React, { useState } from 'react';\nimport { Container, Typography, Button, Box, TextField } from '@mui/material';\nimport { Link } from 'react-router-dom';\n\nconst MoodTracker = ({ handleAIResponse }) => {\n  const [selectedMood, setSelectedMood] = useState(null);\n  const [feelingExplanation, setFeelingExplanation] = useState('');\n  const [showExplanation, setShowExplanation] = useState(false);\n\n  // Mood options with emojis and labels\n  const moods = [\n    { label: 'happy', emoji: 'ðŸ˜Š' },\n    { label: 'anxious', emoji: 'ðŸ˜°' },\n    { label: 'sad', emoji: 'ðŸ˜¢' },\n    { label: 'overwhelmed', emoji: 'ðŸ˜µ' },\n    { label: 'calm', emoji: 'ðŸ˜Œ' },\n  ];\n\n  // Handle mood selection\n  const handleMoodSelect = (mood) => {\n    setSelectedMood(mood);\n    setShowExplanation(true); // Show explanation prompt after selecting a mood\n  };\n\n  return (\n    <Container\n      style={{\n        backgroundColor: '#F9F9F9',\n        padding: '20px',\n        borderRadius: '12px',\n        boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.1)',\n        marginBottom: '30px',\n        textAlign: 'center',\n      }}\n    >\n      <Typography variant=\"h5\" style={{ marginBottom: '10px', fontWeight: 'bold' }}>\n        How are you feeling today?\n      </Typography>\n\n      {/* Emoji mood selection */}\n      <Box display=\"flex\" justifyContent=\"center\" gap=\"15px\">\n        {moods.map((mood, index) => (\n          <Box key={index} textAlign=\"center\">\n            <Button\n              onClick={() => handleMoodSelect(mood)}\n              style={{\n                backgroundColor: selectedMood?.label === mood.label ? '#FF5722' : '#E0E0E0',\n                color: '#000',\n                width: '70px',\n                height: '70px',\n                borderRadius: '50%',\n                fontSize: '2rem',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              {mood.emoji}\n            </Button>\n            <Typography variant=\"body2\" style={{ marginTop: '5px', color: '#555' }}>\n              {mood.label}\n            </Typography>\n          </Box>\n        ))}\n      </Box>\n\n      {/* Show \"Need Guidance?\" button when a mood is selected */}\n      {selectedMood && (\n        <Box mt={4}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            component={Link}\n            to={`/guidance/${selectedMood.label}`}\n            style={{ padding: '10px 20px', backgroundColor: '#FF5722', color: '#fff' }}\n          >\n            Need Guidance?\n          </Button>\n        </Box>\n      )}\n    </Container>\n  );\n};\n\nexport default MoodTracker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}